#import "scancode";

using scancode;

SDL_Keycode :: enum i32 {
    SDLK_UNKNOWN = 0,
    SDLK_RETURN = 13,
    SDLK_ESCAPE = 27,
    SDLK_BACKSPACE = 8,
    SDLK_TAB = 9,
    SDLK_SPACE = 32,
    SDLK_EXCLAIM = 33,
    SDLK_QUOTEDBL = 34,
    SDLK_HASH = 35,
    SDLK_PERCENT = 37,
    SDLK_DOLLAR = 36,
    SDLK_AMPERSAND = 38,
    SDLK_QUOTE = 39,
    SDLK_LEFTPAREN = 40,
    SDLK_RIGHTPAREN = 41,
    SDLK_ASTERISK = 42,
    SDLK_PLUS = 43,
    SDLK_COMMA = 44,
    SDLK_MINUS = 45,
    SDLK_PERIOD = 46,
    SDLK_SLASH = 47,
    SDLK_0 = 48,
    SDLK_1 = 49,
    SDLK_2 = 50,
    SDLK_3 = 51,
    SDLK_4 = 52,
    SDLK_5 = 53,
    SDLK_6 = 54,
    SDLK_7 = 55,
    SDLK_8 = 56,
    SDLK_9 = 57,
    SDLK_COLON = 58,
    SDLK_SEMICOLON = 59,
    SDLK_LESS = 60,
    SDLK_EQUALS = 61,
    SDLK_GREATER = 62,
    SDLK_QUESTION = 63,
    SDLK_AT = 64,
    SDLK_LEFTBRACKET = 91,
    SDLK_BACKSLASH = 92,
    SDLK_RIGHTBRACKET = 93,
    SDLK_CARET = 94,
    SDLK_UNDERSCORE = 95,
    SDLK_BACKQUOTE = 96,
    SDLK_a = 97,
    SDLK_b = 98,
    SDLK_c = 99,
    SDLK_d = 100,
    SDLK_e = 101,
    SDLK_f = 102,
    SDLK_g = 103,
    SDLK_h = 104,
    SDLK_i = 105,
    SDLK_j = 106,
    SDLK_k = 107,
    SDLK_l = 108,
    SDLK_m = 109,
    SDLK_n = 110,
    SDLK_o = 111,
    SDLK_p = 112,
    SDLK_q = 113,
    SDLK_r = 114,
    SDLK_s = 115,
    SDLK_t = 116,
    SDLK_u = 117,
    SDLK_v = 118,
    SDLK_w = 119,
    SDLK_x = 120,
    SDLK_y = 121,
    SDLK_z = 122,
    SDLK_CAPSLOCK = SDL_Scancode.SDL_SCANCODE_CAPSLOCK as i32 | (1 << 30),
    SDLK_F1 = SDL_Scancode.SDL_SCANCODE_F1 as i32 | (1 << 30),
    SDLK_F2 = SDL_Scancode.SDL_SCANCODE_F2 as i32 | (1 << 30),
    SDLK_F3 = SDL_Scancode.SDL_SCANCODE_F3 as i32 | (1 << 30),
    SDLK_F4 = SDL_Scancode.SDL_SCANCODE_F4 as i32 | (1 << 30),
    SDLK_F5 = SDL_Scancode.SDL_SCANCODE_F5 as i32 | (1 << 30),
    SDLK_F6 = SDL_Scancode.SDL_SCANCODE_F6 as i32 | (1 << 30),
    SDLK_F7 = SDL_Scancode.SDL_SCANCODE_F7 as i32 | (1 << 30),
    SDLK_F8 = SDL_Scancode.SDL_SCANCODE_F8 as i32 | (1 << 30),
    SDLK_F9 = SDL_Scancode.SDL_SCANCODE_F9 as i32 | (1 << 30),
    SDLK_F10 = SDL_Scancode.SDL_SCANCODE_F10 as i32 | (1 << 30),
    SDLK_F11 = SDL_Scancode.SDL_SCANCODE_F11 as i32 | (1 << 30),
    SDLK_F12 = SDL_Scancode.SDL_SCANCODE_F12 as i32 | (1 << 30),
    SDLK_PRINTSCREEN = SDL_Scancode.SDL_SCANCODE_PRINTSCREEN as i32 | (1 << 30),
    SDLK_SCROLLLOCK = SDL_Scancode.SDL_SCANCODE_SCROLLLOCK as i32 | (1 << 30),
    SDLK_PAUSE = SDL_Scancode.SDL_SCANCODE_PAUSE as i32 | (1 << 30),
    SDLK_INSERT = SDL_Scancode.SDL_SCANCODE_INSERT as i32 | (1 << 30),
    SDLK_HOME = SDL_Scancode.SDL_SCANCODE_HOME as i32 | (1 << 30),
    SDLK_PAGEUP = SDL_Scancode.SDL_SCANCODE_PAGEUP as i32 | (1 << 30),
    SDLK_DELETE = 0x7F,
    SDLK_END = SDL_Scancode.SDL_SCANCODE_END as i32 | (1 << 30),
    SDLK_PAGEDOWN = SDL_Scancode.SDL_SCANCODE_PAGEDOWN as i32 | (1 << 30),
    SDLK_RIGHT = SDL_Scancode.SDL_SCANCODE_RIGHT as i32 | (1 << 30),
    SDLK_LEFT = SDL_Scancode.SDL_SCANCODE_LEFT as i32 | (1 << 30),
    SDLK_DOWN = SDL_Scancode.SDL_SCANCODE_DOWN as i32 | (1 << 30),
    SDLK_UP = SDL_Scancode.SDL_SCANCODE_UP as i32 | (1 << 30),
    SDLK_NUMLOCKCLEAR = SDL_Scancode.SDL_SCANCODE_NUMLOCKCLEAR as i32 | (1 << 30),
    SDLK_KP_DIVIDE = SDL_Scancode.SDL_SCANCODE_KP_DIVIDE as i32 | (1 << 30),
    SDLK_KP_MULTIPLY = SDL_Scancode.SDL_SCANCODE_KP_MULTIPLY as i32 | (1 << 30),
    SDLK_KP_MINUS = SDL_Scancode.SDL_SCANCODE_KP_MINUS as i32 | (1 << 30),
    SDLK_KP_PLUS = SDL_Scancode.SDL_SCANCODE_KP_PLUS as i32 | (1 << 30),
    SDLK_KP_ENTER = SDL_Scancode.SDL_SCANCODE_KP_ENTER as i32 | (1 << 30),
    SDLK_KP_1 = SDL_Scancode.SDL_SCANCODE_KP_1 as i32 | (1 << 30),
    SDLK_KP_2 = SDL_Scancode.SDL_SCANCODE_KP_2 as i32 | (1 << 30),
    SDLK_KP_3 = SDL_Scancode.SDL_SCANCODE_KP_3 as i32 | (1 << 30),
    SDLK_KP_4 = SDL_Scancode.SDL_SCANCODE_KP_4 as i32 | (1 << 30),
    SDLK_KP_5 = SDL_Scancode.SDL_SCANCODE_KP_5 as i32 | (1 << 30),
    SDLK_KP_6 = SDL_Scancode.SDL_SCANCODE_KP_6 as i32 | (1 << 30),
    SDLK_KP_7 = SDL_Scancode.SDL_SCANCODE_KP_7 as i32 | (1 << 30),
    SDLK_KP_8 = SDL_Scancode.SDL_SCANCODE_KP_8 as i32 | (1 << 30),
    SDLK_KP_9 = SDL_Scancode.SDL_SCANCODE_KP_9 as i32 | (1 << 30),
    SDLK_KP_0 = SDL_Scancode.SDL_SCANCODE_KP_0 as i32 | (1 << 30),
    SDLK_KP_PERIOD = SDL_Scancode.SDL_SCANCODE_KP_PERIOD as i32 | (1 << 30),
    SDLK_APPLICATION = SDL_Scancode.SDL_SCANCODE_APPLICATION as i32 | (1 << 30),
    SDLK_POWER = SDL_Scancode.SDL_SCANCODE_POWER as i32 | (1 << 30),
    SDLK_KP_EQUALS = SDL_Scancode.SDL_SCANCODE_KP_EQUALS as i32 | (1 << 30),
    SDLK_F13 = SDL_Scancode.SDL_SCANCODE_F13 as i32 | (1 << 30),
    SDLK_F14 = SDL_Scancode.SDL_SCANCODE_F14 as i32 | (1 << 30),
    SDLK_F15 = SDL_Scancode.SDL_SCANCODE_F15 as i32 | (1 << 30),
    SDLK_F16 = SDL_Scancode.SDL_SCANCODE_F16 as i32 | (1 << 30),
    SDLK_F17 = SDL_Scancode.SDL_SCANCODE_F17 as i32 | (1 << 30),
    SDLK_F18 = SDL_Scancode.SDL_SCANCODE_F18 as i32 | (1 << 30),
    SDLK_F19 = SDL_Scancode.SDL_SCANCODE_F19 as i32 | (1 << 30),
    SDLK_F20 = SDL_Scancode.SDL_SCANCODE_F20 as i32 | (1 << 30),
    SDLK_F21 = SDL_Scancode.SDL_SCANCODE_F21 as i32 | (1 << 30),
    SDLK_F22 = SDL_Scancode.SDL_SCANCODE_F22 as i32 | (1 << 30),
    SDLK_F23 = SDL_Scancode.SDL_SCANCODE_F23 as i32 | (1 << 30),
    SDLK_F24 = SDL_Scancode.SDL_SCANCODE_F24 as i32 | (1 << 30),
    SDLK_EXECUTE = SDL_Scancode.SDL_SCANCODE_EXECUTE as i32 | (1 << 30),
    SDLK_HELP = SDL_Scancode.SDL_SCANCODE_HELP as i32 | (1 << 30),
    SDLK_MENU = SDL_Scancode.SDL_SCANCODE_MENU as i32 | (1 << 30),
    SDLK_SELECT = SDL_Scancode.SDL_SCANCODE_SELECT as i32 | (1 << 30),
    SDLK_STOP = SDL_Scancode.SDL_SCANCODE_STOP as i32 | (1 << 30),
    SDLK_AGAIN = SDL_Scancode.SDL_SCANCODE_AGAIN as i32 | (1 << 30),
    SDLK_UNDO = SDL_Scancode.SDL_SCANCODE_UNDO as i32 | (1 << 30),
    SDLK_CUT = SDL_Scancode.SDL_SCANCODE_CUT as i32 | (1 << 30),
    SDLK_COPY = SDL_Scancode.SDL_SCANCODE_COPY as i32 | (1 << 30),
    SDLK_PASTE = SDL_Scancode.SDL_SCANCODE_PASTE as i32 | (1 << 30),
    SDLK_FIND = SDL_Scancode.SDL_SCANCODE_FIND as i32 | (1 << 30),
    SDLK_MUTE = SDL_Scancode.SDL_SCANCODE_MUTE as i32 | (1 << 30),
    SDLK_VOLUMEUP = SDL_Scancode.SDL_SCANCODE_VOLUMEUP as i32 | (1 << 30),
    SDLK_VOLUMEDOWN = SDL_Scancode.SDL_SCANCODE_VOLUMEDOWN as i32 | (1 << 30),
    SDLK_KP_COMMA = SDL_Scancode.SDL_SCANCODE_KP_COMMA as i32 | (1 << 30),
    SDLK_KP_EQUALSAS400 = SDL_Scancode.SDL_SCANCODE_KP_EQUALSAS400 as i32 | (1 << 30),
    SDLK_ALTERASE = SDL_Scancode.SDL_SCANCODE_ALTERASE as i32 | (1 << 30),
    SDLK_SYSREQ = SDL_Scancode.SDL_SCANCODE_SYSREQ as i32 | (1 << 30),
    SDLK_CANCEL = SDL_Scancode.SDL_SCANCODE_CANCEL as i32 | (1 << 30),
    SDLK_CLEAR = SDL_Scancode.SDL_SCANCODE_CLEAR as i32 | (1 << 30),
    SDLK_PRIOR = SDL_Scancode.SDL_SCANCODE_PRIOR as i32 | (1 << 30),
    SDLK_RETURN2 = SDL_Scancode.SDL_SCANCODE_RETURN2 as i32 | (1 << 30),
    SDLK_SEPARATOR = SDL_Scancode.SDL_SCANCODE_SEPARATOR as i32 | (1 << 30),
    SDLK_OUT = SDL_Scancode.SDL_SCANCODE_OUT as i32 | (1 << 30),
    SDLK_OPER = SDL_Scancode.SDL_SCANCODE_OPER as i32 | (1 << 30),
    SDLK_CLEARAGAIN = SDL_Scancode.SDL_SCANCODE_CLEARAGAIN as i32 | (1 << 30),
    SDLK_CRSEL = SDL_Scancode.SDL_SCANCODE_CRSEL as i32 | (1 << 30),
    SDLK_EXSEL = SDL_Scancode.SDL_SCANCODE_EXSEL as i32 | (1 << 30),
    SDLK_KP_00 = SDL_Scancode.SDL_SCANCODE_KP_00 as i32 | (1 << 30),
    SDLK_KP_000 = SDL_Scancode.SDL_SCANCODE_KP_000 as i32 | (1 << 30),
    SDLK_THOUSANDSSEPARATOR = SDL_Scancode.SDL_SCANCODE_THOUSANDSSEPARATOR as i32 | (1 << 30),
    SDLK_DECIMALSEPARATOR = SDL_Scancode.SDL_SCANCODE_DECIMALSEPARATOR as i32 | (1 << 30),
    SDLK_CURRENCYUNIT = SDL_Scancode.SDL_SCANCODE_CURRENCYUNIT as i32 | (1 << 30),
    SDLK_CURRENCYSUBUNIT = SDL_Scancode.SDL_SCANCODE_CURRENCYSUBUNIT as i32 | (1 << 30),
    SDLK_KP_LEFTPAREN = SDL_Scancode.SDL_SCANCODE_KP_LEFTPAREN as i32 | (1 << 30),
    SDLK_KP_RIGHTPAREN = SDL_Scancode.SDL_SCANCODE_KP_RIGHTPAREN as i32 | (1 << 30),
    SDLK_KP_LEFTBRACE = SDL_Scancode.SDL_SCANCODE_KP_LEFTBRACE as i32 | (1 << 30),
    SDLK_KP_RIGHTBRACE = SDL_Scancode.SDL_SCANCODE_KP_RIGHTBRACE as i32 | (1 << 30),
    SDLK_KP_TAB = SDL_Scancode.SDL_SCANCODE_KP_TAB as i32 | (1 << 30),
    SDLK_KP_BACKSPACE = SDL_Scancode.SDL_SCANCODE_KP_BACKSPACE as i32 | (1 << 30),
    SDLK_KP_A = SDL_Scancode.SDL_SCANCODE_KP_A as i32 | (1 << 30),
    SDLK_KP_B = SDL_Scancode.SDL_SCANCODE_KP_B as i32 | (1 << 30),
    SDLK_KP_C = SDL_Scancode.SDL_SCANCODE_KP_C as i32 | (1 << 30),
    SDLK_KP_D = SDL_Scancode.SDL_SCANCODE_KP_D as i32 | (1 << 30),
    SDLK_KP_E = SDL_Scancode.SDL_SCANCODE_KP_E as i32 | (1 << 30),
    SDLK_KP_F = SDL_Scancode.SDL_SCANCODE_KP_F as i32 | (1 << 30),
    SDLK_KP_XOR = SDL_Scancode.SDL_SCANCODE_KP_XOR as i32 | (1 << 30),
    SDLK_KP_POWER = SDL_Scancode.SDL_SCANCODE_KP_POWER as i32 | (1 << 30),
    SDLK_KP_PERCENT = SDL_Scancode.SDL_SCANCODE_KP_PERCENT as i32 | (1 << 30),
    SDLK_KP_LESS = SDL_Scancode.SDL_SCANCODE_KP_LESS as i32 | (1 << 30),
    SDLK_KP_GREATER = SDL_Scancode.SDL_SCANCODE_KP_GREATER as i32 | (1 << 30),
    SDLK_KP_AMPERSAND = SDL_Scancode.SDL_SCANCODE_KP_AMPERSAND as i32 | (1 << 30),
    SDLK_KP_DBLAMPERSAND = SDL_Scancode.SDL_SCANCODE_KP_DBLAMPERSAND as i32 | (1 << 30),
    SDLK_KP_VERTICALBAR = SDL_Scancode.SDL_SCANCODE_KP_VERTICALBAR as i32 | (1 << 30),
    SDLK_KP_DBLVERTICALBAR = SDL_Scancode.SDL_SCANCODE_KP_DBLVERTICALBAR as i32 | (1 << 30),
    SDLK_KP_COLON = SDL_Scancode.SDL_SCANCODE_KP_COLON as i32 | (1 << 30),
    SDLK_KP_HASH = SDL_Scancode.SDL_SCANCODE_KP_HASH as i32 | (1 << 30),
    SDLK_KP_SPACE = SDL_Scancode.SDL_SCANCODE_KP_SPACE as i32 | (1 << 30),
    SDLK_KP_AT = SDL_Scancode.SDL_SCANCODE_KP_AT as i32 | (1 << 30),
    SDLK_KP_EXCLAM = SDL_Scancode.SDL_SCANCODE_KP_EXCLAM as i32 | (1 << 30),
    SDLK_KP_MEMSTORE = SDL_Scancode.SDL_SCANCODE_KP_MEMSTORE as i32 | (1 << 30),
    SDLK_KP_MEMRECALL = SDL_Scancode.SDL_SCANCODE_KP_MEMRECALL as i32 | (1 << 30),
    SDLK_KP_MEMCLEAR = SDL_Scancode.SDL_SCANCODE_KP_MEMCLEAR as i32 | (1 << 30),
    SDLK_KP_MEMADD = SDL_Scancode.SDL_SCANCODE_KP_MEMADD as i32 | (1 << 30),
    SDLK_KP_MEMSUBTRACT = SDL_Scancode.SDL_SCANCODE_KP_MEMSUBTRACT as i32 | (1 << 30),
    SDLK_KP_MEMMULTIPLY = SDL_Scancode.SDL_SCANCODE_KP_MEMMULTIPLY as i32 | (1 << 30),
    SDLK_KP_MEMDIVIDE = SDL_Scancode.SDL_SCANCODE_KP_MEMDIVIDE as i32 | (1 << 30),
    SDLK_KP_PLUSMINUS = SDL_Scancode.SDL_SCANCODE_KP_PLUSMINUS as i32 | (1 << 30),
    SDLK_KP_CLEAR = SDL_Scancode.SDL_SCANCODE_KP_CLEAR as i32 | (1 << 30),
    SDLK_KP_CLEARENTRY = SDL_Scancode.SDL_SCANCODE_KP_CLEARENTRY as i32 | (1 << 30),
    SDLK_KP_BINARY = SDL_Scancode.SDL_SCANCODE_KP_BINARY as i32 | (1 << 30),
    SDLK_KP_OCTAL = SDL_Scancode.SDL_SCANCODE_KP_OCTAL as i32 | (1 << 30),
    SDLK_KP_DECIMAL = SDL_Scancode.SDL_SCANCODE_KP_DECIMAL as i32 | (1 << 30),
    SDLK_KP_HEXADECIMAL = SDL_Scancode.SDL_SCANCODE_KP_HEXADECIMAL as i32 | (1 << 30),
    SDLK_LCTRL = SDL_Scancode.SDL_SCANCODE_LCTRL as i32 | (1 << 30),
    SDLK_LSHIFT = SDL_Scancode.SDL_SCANCODE_LSHIFT as i32 | (1 << 30),
    SDLK_LALT = SDL_Scancode.SDL_SCANCODE_LALT as i32 | (1 << 30),
    SDLK_LGUI = SDL_Scancode.SDL_SCANCODE_LGUI as i32 | (1 << 30),
    SDLK_RCTRL = SDL_Scancode.SDL_SCANCODE_RCTRL as i32 | (1 << 30),
    SDLK_RSHIFT = SDL_Scancode.SDL_SCANCODE_RSHIFT as i32 | (1 << 30),
    SDLK_RALT = SDL_Scancode.SDL_SCANCODE_RALT as i32 | (1 << 30),
    SDLK_RGUI = SDL_Scancode.SDL_SCANCODE_RGUI as i32 | (1 << 30),
    SDLK_MODE = SDL_Scancode.SDL_SCANCODE_MODE as i32 | (1 << 30),
    SDLK_AUDIONEXT = SDL_Scancode.SDL_SCANCODE_AUDIONEXT as i32 | (1 << 30),
    SDLK_AUDIOPREV = SDL_Scancode.SDL_SCANCODE_AUDIOPREV as i32 | (1 << 30),
    SDLK_AUDIOSTOP = SDL_Scancode.SDL_SCANCODE_AUDIOSTOP as i32 | (1 << 30),
    SDLK_AUDIOPLAY = SDL_Scancode.SDL_SCANCODE_AUDIOPLAY as i32 | (1 << 30),
    SDLK_AUDIOMUTE = SDL_Scancode.SDL_SCANCODE_AUDIOMUTE as i32 | (1 << 30),
    SDLK_MEDIASELECT = SDL_Scancode.SDL_SCANCODE_MEDIASELECT as i32 | (1 << 30),
    SDLK_WWW = SDL_Scancode.SDL_SCANCODE_WWW as i32 | (1 << 30),
    SDLK_MAIL = SDL_Scancode.SDL_SCANCODE_MAIL as i32 | (1 << 30),
    SDLK_CALCULATOR = SDL_Scancode.SDL_SCANCODE_CALCULATOR as i32 | (1 << 30),
    SDLK_COMPUTER = SDL_Scancode.SDL_SCANCODE_COMPUTER as i32 | (1 << 30),
    SDLK_AC_SEARCH = SDL_Scancode.SDL_SCANCODE_AC_SEARCH as i32 | (1 << 30),
    SDLK_AC_HOME = SDL_Scancode.SDL_SCANCODE_AC_HOME as i32 | (1 << 30),
    SDLK_AC_BACK = SDL_Scancode.SDL_SCANCODE_AC_BACK as i32 | (1 << 30),
    SDLK_AC_FORWARD = SDL_Scancode.SDL_SCANCODE_AC_FORWARD as i32 | (1 << 30),
    SDLK_AC_STOP = SDL_Scancode.SDL_SCANCODE_AC_STOP as i32 | (1 << 30),
    SDLK_AC_REFRESH = SDL_Scancode.SDL_SCANCODE_AC_REFRESH as i32 | (1 << 30),
    SDLK_AC_BOOKMARKS = SDL_Scancode.SDL_SCANCODE_AC_BOOKMARKS as i32 | (1 << 30),
    SDLK_BRIGHTNESSDOWN = SDL_Scancode.SDL_SCANCODE_BRIGHTNESSDOWN as i32 | (1 << 30),
    SDLK_BRIGHTNESSUP = SDL_Scancode.SDL_SCANCODE_BRIGHTNESSUP as i32 | (1 << 30),
    SDLK_DISPLAYSWITCH = SDL_Scancode.SDL_SCANCODE_DISPLAYSWITCH as i32 | (1 << 30),
    SDLK_KBDILLUMTOGGLE = SDL_Scancode.SDL_SCANCODE_KBDILLUMTOGGLE as i32 | (1 << 30),
    SDLK_KBDILLUMDOWN = SDL_Scancode.SDL_SCANCODE_KBDILLUMDOWN as i32 | (1 << 30),
    SDLK_KBDILLUMUP = SDL_Scancode.SDL_SCANCODE_KBDILLUMUP as i32 | (1 << 30),
    SDLK_EJECT = SDL_Scancode.SDL_SCANCODE_EJECT as i32 | (1 << 30),
    SDLK_SLEEP = SDL_Scancode.SDL_SCANCODE_SLEEP as i32 | (1 << 30),
    SDLK_APP1 = SDL_Scancode.SDL_SCANCODE_APP1 as i32 | (1 << 30),
    SDLK_APP2 = SDL_Scancode.SDL_SCANCODE_APP2 as i32 | (1 << 30),
    SDLK_AUDIOREWIND = SDL_Scancode.SDL_SCANCODE_AUDIOREWIND as i32 | (1 << 30),
    SDLK_AUDIOFASTFORWARD = SDL_Scancode.SDL_SCANCODE_AUDIOFASTFORWARD as i32 | (1 << 30),
    SDLK_SOFTLEFT = SDL_Scancode.SDL_SCANCODE_SOFTLEFT as i32 | (1 << 30),
    SDLK_SOFTRIGHT = SDL_Scancode.SDL_SCANCODE_SOFTRIGHT as i32 | (1 << 30),
    SDLK_CALL = SDL_Scancode.SDL_SCANCODE_CALL as i32 | (1 << 30),
    SDLK_ENDCALL = SDL_Scancode.SDL_SCANCODE_ENDCALL as i32 | (1 << 30)
}

KMOD_NONE :: 0x0000;
KMOD_LSHIFT :: 0x0001;
KMOD_RSHIFT :: 0x0002;
KMOD_LCTRL :: 0x0040;
KMOD_RCTRL :: 0x0080;
KMOD_LALT :: 0x0100;
KMOD_RALT :: 0x0200;
KMOD_LGUI :: 0x0400;
KMOD_RGUI :: 0x0800;
KMOD_NUM :: 0x1000;
KMOD_CAPS :: 0x2000;
KMOD_MODE :: 0x4000;
KMOD_SCROLL :: 0x8000;
KMOD_CTRL :: KMOD_LCTRL | KMOD_RCTRL;
KMOD_SHIFT :: KMOD_LSHIFT | KMOD_RSHIFT;
KMOD_ALT :: KMOD_LALT | KMOD_RALT;
KMOD_GUI :: KMOD_LGUI | KMOD_RGUI;
KMOD_RESERVED :: KMOD_SCROLL;